version: '3.5'
services:
    
  full-stack:
    image: tianon/true
    depends_on: [twingate, crowdsec, traefik]

  twingate:
    container_name: twingate
    image: twingate/connector:1
    restart: unless-stopped
    environment:
      - TENANT_URL=${TENANT_URL}
      - ACCESS_TOKEN=${ACCESS_TOKEN}
      - REFRESH_TOKEN=${REFRESH_TOKEN}
      - TWINGATE_LABEL_HOSTNAME=${TWINGATE_LABEL_HOSTNAME}
    logging:
      driver: fluentd
      options:
          fluentd-async-connect: 'true'
          fluentd-address: '192.168.3.201:24224'
    networks:
      - external

  ngrok:
    container_name: ngrok
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "http" 
      - "--domain=fine-eternal-falcon.ngrok-free.app" 
      - "192.168.3.201"
      - "--oauth=google"
      - "--oauth-allow-email=boejaker80@gmail.com"
      # - "start"
      # - "--all"
      # - "--config"
      # - "/etc/ngrok.yml"
    environment:
      - NGROK_AUTHTOKEN=${NGROK_TOKEN}
      - HOSTNAME=fine-eternal-falcon.ngrok-free.app
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    logging:
      driver: fluentd
      options:
          fluentd-async-connect: 'true'
          fluentd-address: '192.168.3.201:24224'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ngrok.rule=Host(`ngrok.localhost`, `ngrok.traefik.internal`, `ngrok.int`) || PathPrefix(`/ngrok`)"
      - "traefik.http.services.ngrok.loadbalancer.server.port=4040"
      - "traefik.http.services.ngrok.loadbalancer.server.scheme=https"
      - "traefik.http.middlewares.ngrok.stripprefix.prefixes=/ngrok"
      - "traefik.http.middlewares.ngrok.stripprefix.forceSlash=false"
      - "traefik.http.routers.ngrok.middlewares=ngrok"
      - "traefik.http.routers.ngrok.middlewares=ngrok, ngrok-auth"
      - "traefik.http.middlewares.ngrok-auth.basicauth.usersfile=/htpasswd.txt"
      - "function.port.4040=Tunnel Monitoring"
    networks:
      - external

  
  firewall:
    container_name: firewall
    restart: unless-stopped
    build: ./services/firewall
    privileged: true
    logging:
        driver: fluentd
        options:
            fluentd-async-connect: 'true'
            fluentd-address: '192.168.3.201:24224'

  crowdsec:
    container_name: crowdsec
    image: crowdsecurity/crowdsec:v1.0.8
    restart: unless-stopped
    environment:
      COLLECTIONS: "crowdsecurity/traefik"
      GID: "${GID-1000}"
    ports:
      - 8000:8000
    volumes:
      - ./crowdsec/acquis.yaml:/etc/crowdsec/acquis.yaml
      - logs:/var/log/traefik
      - crowdsec-db:/var/lib/crowdsec/data/
      - crowdsec-config:/etc/crowdsec/
    logging:
      driver: fluentd
      options:
          fluentd-async-connect: 'true'
          fluentd-address: '192.168.3.201:24224'
    networks:
      - crowdsec
      - external

  #metabase, because security is cool, but dashboards are cooler
  cs-dashboard:
    container_name: cs-dashboard
    #we're using a custom Dockerfile so that metabase pops with pre-configured dashboards
    build: ./crowdsec/dashboard
    restart: unless-stopped
    ports:
      - 3001:3000
    environment:
      MB_DB_FILE: /data/metabase.db
      MGID: "${GID-1000}"
    depends_on:
      - 'crowdsec'
    volumes:
      - crowdsec-db:/metabase-data/
    logging:
      driver: fluentd
      options:
          fluentd-async-connect: 'true'
          fluentd-address: '192.168.3.201:24224'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cs-dashboard.rule=Host(`cs-dashboard.localhost`, `cs-dashboard.traefik.internal`) || PathPrefix(`/cs-dashboard`)"
      - "traefik.http.services.cs-dashboard.loadbalancer.server.port=3000"
      - "traefik.http.services.cs-dashboard.loadbalancer.server.scheme=https"
      - "traefik.http.middlewares.cs-dashboard.stripprefix.prefixes=/cs-dashboard"
      - "traefik.http.middlewares.cs-dashboard.stripprefix.forceSlash=false"
      - "traefik.http.routers.cs-dashboard.middlewares=cs-dashboard, cs-dashboard-auth"
      - "traefik.http.middlewares.cs-dashboard-auth.basicauth.usersfile=/htpasswd.txt"
      - "function.port.80=Reverse Proxy "
    networks:
      - crowdsec
      - logging
        # ipv4_address: 172.20.0.5

  traefik:
    container_name: traefik
    hostname: traefik   
    image: traefik:latest
    restart: unless-stopped
    deploy:
      mode: global  # Deploy as a global service
    command:
      - "--api.insecure=true" # true"
      - "--accesslog=true"
      - "--tracing=true"
      - "--tracing.serviceName=elasticsearch"
      - "--accesslog.filepath=/var/log/access.log"
      - "--serverstransport.insecureskipverify=true"

      - "--providers.docker=true"
      # - "--swarmmode=true"
      - "--providers.docker.network=traefik"
      - "--providers.docker.exposedbydefault=false"

      # - "--entrypoints.twingate.address=10.0.7.4:80"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls.certResolver=myresolver"

      - "--certificatesresolvers.myresolver.acme.email=jb.enquiries@proton.me"
      - "--certificatesresolvers.myresolver.acme.storage=/etc/traefik/acme/acme.json"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"

      - "--log.level=DEBUG"
      - "--log.filePath=/var/log/traefik.log" 
      - "--providers.file.directory=/dyn"
      
      - "--experimental.plugins.fail2ban.modulename=github.com/tomMoulard/fail2ban"
      - "--experimental.plugins.fail2ban.version=v0.7.1"
      - "--serversTransport.forwardingTimeouts.dialTimeout=180s"
      # - "--configfile=/etc/traefik/traefik.yml"
    ports:
      - "80:80"
      - "443:443"
      - "9191:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # - ./services/traefik/traefik.yml:/etc/traefik/traefik.yml
      # - /services/traefik/dynamic.yml:/etc/traefik/dynamic.yml
      - ./traefik/dyn:/dyn
      - traefik-logs:/var/log/
      - ./traefik/htpasswd:/htpasswd.txt
    logging:
      driver: fluentd
      options:
          fluentd-async-connect: 'true'
          fluentd-address: '192.168.3.201:24224'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`, `traefik.traefik.internal`) || PathPrefix(`/traefik`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.services.traefik.loadbalancer.server.scheme=http"
      - "certificatesResolvers.myresolver.acme.email=jb.enquiries@proton.me"
      - "certificatesResolvers.myresolver.acme.storage=/etc/traefik/acme/acme.json"
      - "certificatesResolvers.myresolver.acme.httpChallenge.entryPoint=web"
      - "traefik.http.middlewares.traefik.stripprefix.prefixes=/traefik"
      - "traefik.http.middlewares.traefik.stripprefix.forceSlash=false"
      - "traefik.http.routers.traefik.middlewares=traefik, traefik-auth, my-fail2ban@file"
      - "traefik.http.middlewares.traefik-auth.basicauth.usersfile=/htpasswd.txt"
      - "function.port.8080=Reverse Proxy"
    networks:
      - traefik
      - external


# Reverse Proxy
  nginx:
    container_name: nginx
    image: nginx:latest
    logging:
      driver: fluentd
      options:
          fluentd-async-connect: 'true'
          fluentd-address: '192.168.3.201:24224'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./htpasswd:/etc/nginx/.htpasswd
      - ./https/cert.pem:/etc/nginx/cert.pem
      - ./https/key.pem:/etc/nginx/key.pem
      - ./ssl_passwords.txt:/etc/nginx/ssl_passwords.txt
      - ./access:/etc/nginx/access.log
    # ports:
    #   - "8080:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`nginx.localhost`, `nginx.traefik.internal`) || PathPrefix(`/nginx`)"
      - "traefik.http.services.nginx.loadbalancer.server.port=8080"
      - "traefik.http.services.nginx.loadbalancer.server.scheme=https"
      - "traefik.http.middlewares.nginx.stripprefix.prefixes=/nginx"
      - "traefik.http.middlewares.nginx.stripprefix.forceSlash=false"
      - "traefik.http.routers.nginx.middlewares=nginx, nginx-auth"
      - "traefik.http.middlewares.nginx-auth.basicauth.usersfile=/htpasswd.txt"
      - "function.port.80=Reverse Proxy "
    networks:
      - traefik

  # Man in the Middle Proxy
  mitm:
    container_name: mitm
    # Allows network traffic introspection
    image: mitmproxy/mitmproxy
    logging:
      driver: fluentd
      options:
          fluentd-async-connect: 'true'
          fluentd-address: '192.168.3.201:24224'
    networks:
      - traefik

  # DNS Blackhole
  dns-sinkhole:
    container_name: dns-sinkhole
    # Blocks malicious content and adverts from resolving nameservers
    image: patterns/sinkhole
    logging:
      driver: fluentd
      options:
          fluentd-async-connect: 'true'
          fluentd-address: '192.168.3.201:24224'
    networks:
      - traefik

  adguardhome:
    container_name: adguardhome
    image: adguard/adguardhome
    container_name: adguardhome
    restart: unless-stopped
    logging:
      driver: fluentd
      options:
          fluentd-async-connect: 'true'
          fluentd-address: '192.168.3.201:24224'
    volumes:
      - /my/own/workdir:/opt/adguardhome/work
      - /my/own/confdir:/opt/adguardhome/conf
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      # - "67:67/udp"
      # - "68:68/udp"
      - "8880:80/tcp"
      # - "443:443/tcp"
      # - "443:443/udp"
      - "3003:3000/tcp"
      # - "853:853/tcp"
      # - "853:853/udp"
      # - "5443:5443/tcp"
      # - "5443:5443/udp"
      # - "6060:6060/tcp"
    networks:
      - traefik


  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    logging:
      driver: fluentd
      options:
          fluentd-async-connect: 'true'
          fluentd-address: '192.168.3.201:24224'
    ports:
      - 8123:8123
    volumes:
      - ./homassistant/config:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    # network_mode: host   

  whoami:
    container_name: whoami
    image: "traefik/whoami"
    container_name: "simple-service"
    logging:
      driver: fluentd
      options:
          fluentd-async-connect: 'true'
          fluentd-address: '192.168.3.201:24224'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.rule=Host('whoami.traefik.internal')"
      - "traefik.http.routers.whoami.entrypoints=web"
      - "traefik.http.middlewares.whoami.stripprefix.prefixes=/whoami"
      - "traefik.http.middlewares.whoami.stripprefix.forceSlash=false"
      - "traefik.http.routers.whoami.middlewares=whoami"
      - "function.port.80=Internal test service (whoami)"
    networks:
      - traefik

volumes:
  crowdsec-db:
  crowdsec-config:
  traefik-logs:
  logs:

networks:

    traefik:
      name: traefik
      driver: overlay
      # internal: true
      driver_opts:
        encrypted: "true"
        scope: local
        # com.docker.network.driver.mtu: 1000
    
    crowdsec:
      driver: overlay
      internal: true
      driver_opts:
        encrypted: "true"
        scope: local
          
    external: # Public facing network
        driver: bridge
        enable_ipv6: false
        driver_opts:
          com.docker.network.bridge.enable_ip_masquerade: "true"
        # ipam:
        #     driver: default
        #     config:
        #         - subnet: 173.16.0.0/16
        #           gateway: 173.16.0.1

secrets:
  twingate_secret:
    file: ./secrets/twingate.txt
  ngrok_secret:
    file: ./secrets/ngrok.txt
  crowdsec_secret:
    file: ./secrets/crowdsec.txt
  traefik_secret:
    file: ./secrets/traefik.txt
  traefik_htpasswd:
    file: ./secrets/traefik_htpasswd.txt
  nginx_secret:
    file: ./secrets/nginx.txt
  adguard_secret:
    file: ./secrets/adguard.txt
  homeassistant_secret:
    file: ./secrets/homeassistant.txt 